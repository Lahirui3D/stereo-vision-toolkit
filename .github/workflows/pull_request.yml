name: Pull Request

# only trigger on main branch pull request open / edit events
# used to test code before merging
on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]


jobs:
    temp-build:
      runs-on: ubuntu-latest
      steps:
      - run: |
          echo Pull Request build disabled until faster build process is implemented.

    build:
      # [DISABLED] until faster build process is implemented
      # TODO improve automated build speed
      if: false == true
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v2
        # Checkout submodules (required for fever module used in app update system)
        - name: Checkout submodules
          run: git submodule update --init --recursive

        # Get project version
        - name: Get project version
          shell: bash
          run: |
            PROJ_VER=$(cat version.txt)
            echo "SVTK_VERSION=$PROJ_VER" >> $GITHUB_ENV
        # Get latest released version
        - uses: oprypin/find-latest-tag@v1
          with:
            repository: i3drobotics/stereo-vision-toolkit  # The repository to scan.
            releases-only: true  # All relevant tags have a GitHub release for them.
          id: latest-svtk  # The step ID to refer to later.
        - name: Get latest released version
          shell: bash
          run: | 
              LATEST_SVTK_VERSION=${{steps.latest-svtk.outputs.tag}}
              LATEST_SVTK_VERSION=${LATEST_SVTK_VERSION:1}
              echo "LATEST_SVTK_VERSION=$LATEST_SVTK_VERSION" >> $GITHUB_ENV
        # Check build version is greater than latest released version
        - name: Version check
          shell: bash
          run: ./scripts/version-check.sh $SVTK_VERSION $LATEST_SVTK_VERSION

        # Setup build environment
        - name: Install Qt
          uses: jurplel/install-qt-action@v2
          with:
            version: '5.14.2'
            host: 'windows'
            target: 'desktop'
            arch: 'win64_msvc2017_64'
            dir: '${{ github.workspace }}/qt-install/'
            install-deps: 'true'
            modules: 'qtwebengine'
            tools-only: 'false'
        - name: Install jom and inno setup
          shell: cmd
          run: | 
            choco install jom
            choco install innosetup
        # Install 3rd party dependencies
        - name: Install 3rdparty
          shell: cmd
          run: |
            call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
            .\scripts\3rdparty.bat
        # Build application
        - name: Build
          shell: cmd
          run: |
            call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
            mkdir build
            cd build
            qmake.exe "CONFIG+=qtquickcompiler CONFIG+=WITH_I3DRSGM" ../stereo_vision_toolkit.pro -spec win32-msvc
