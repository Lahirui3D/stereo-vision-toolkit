name: Build Installer
# Used to manually build an installer for developmental testing.

on:
  # Manual triggering
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      # Checkout submodules (required for fever module used in app update system)
      - name: Checkout submodules
        run: git submodule update --init --recursive
      # Set placeholder project version
      - name: Get project version
        shell: bash
        run: |
          PROJ_VER=0.0.0
          echo "$PROJ_VER" > version.txt
          echo "PROJ_VER=$PROJ_VER" >> $GITHUB_ENV
      # Setup build environment
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.14.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2017_64'
          dir: '${{ github.workspace }}/qt-install/'
          install-deps: 'true'
          modules: 'qtwebengine'
          tools-only: 'false'
      - name: Install jom, inno setup, doxygen
        shell: powershell
        run: | 
          choco install jom
          choco install innosetup
          choco install doxygen.install
      # Install 3rd party dependencies
      - name: Install 3rdparty
        shell: cmd
        run: |
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          .\scripts\3rdparty.bat
      # Build application
      - name: Build
        shell: cmd
        run: |
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          mkdir build
          cd build
          qmake.exe "CONFIG+=qtquickcompiler WITH_I3DRSGM SHOW_CONSOLE" ../stereo_vision_toolkit.pro -spec win32-msvc
          jom.exe
      # Create installer
      - name: Create installer
        shell: cmd
        run: |
          iscc installer\installer.iss
      # Upload installer as artifact for testing
      - name: Upload installer
        uses: actions/upload-artifact@v2
        with:
          path: installer/Output/*.exe
          name: build-installer-${{ github.sha }}
          retention-days: 7
